<!DOCTYPE html>
<html lang="en">
  <head>
    {% block head %}
      <link rel="stylesheet" href="/assets/main.css"/>
      {% if pageUrl.includes('weather') %}
      <link rel="stylesheet" href="/assets/weather.css"/>
      {% endif %}
      <title>
        {% block title %}{% endblock %}Brent Lawson Portfolio</title>
    {% endblock %}
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"/>
  </head>
  <body>
  <header>
    <div class="round"><a class="logo" href="/"><img src="/assets/img/logo.jpg"  alt="logo BL"/></a></div>
        <nav>
              <!-- The hamburger menu -->
        <label for='menu' tabindex="0">
             <div class="ham">
              <span></span>
              <span></span>
              <span></span>
             </div>
        </label>
         <input id='menu' type='checkbox' />
          <ul>
        {% for navItem in navList %}
            <li><a href={{ navItem.url }}>{{ navItem.text }}</a></li>
        {% endfor %}
        </ul>
      </nav>
    <div id="resource-btn-wrap"><button id="resource-timing-btn">Show Resource Data</button></div>
</header>
      <main>
      {% block content %}{% endblock %}
      <div id="signup">
        <h3>Get in Touch</h3>
      <button id="sign-up-btn">Send Message</button>
      <div class="form-wrap">
        <form id="userForm" method="post" action="/users/sendmessage">
        <div class="flex">
            <label for="name" class="form-label" >Name:</label>
            <input type="text" id="name" name="name" required required maxlength="20" class="form-control">
            <span id="namebad">Name is required</span>
        </div>
    
        <div class="flex">
            <label for="email" class="form-label">Email:</label>
            <input type="email" id="email" name="email" required class="form-control">
            <span id="emailbad">Name is required</span>
        </div>
    
        <div class="flex">
            <label for="message" class="form-label">Message:</label>
            <textarea id="message" name="message" required class="form-control"></textarea>
        </div>
        <label class="hoy" for="username"></label>
        <input class="hoy" autocomplete="off" type="text" id="username" name="username" placeholder="Your name here">
    
        <button type="submit" class="btn btn-dark">Send Message</button>
    </form>
    </div>
    </div>
    <div id="resource-data-wrap">
      <div>
      <div class="close-icon"></div>
      <div id="resource-data"></div>
    </div>
    </div>
    </main>
    <footer>
      <p>&copy; Copyright 2024</p>
    </footer>
  <script>
(async function() {

      let displayDataString = '';

      document.addEventListener("DOMContentLoaded", (event) => {
        const perfDataContainer = document.getElementById('resource-data');
        const perfWrap = document.getElementById('resource-data-wrap');
        const resourceBtn = document.getElementById('resource-timing-btn');
        const closeIcon = document.getElementsByClassName('close-icon')[0];
        const nameValidation = document.getElementById('namebad');
        const emailValidation = document.getElementById('emailbad');

        //form
        const formBtn = document.getElementById('sign-up-btn');
        const formWrap = document.querySelectorAll('.form-wrap')[0];
        formBtn.addEventListener('click', () => {
          formWrap.classList.add('open-form');
          formBtn.classList.add('hidden');
        });
        const form = document.getElementById('userForm');
        form.addEventListener('submit', function (event) {
          event.preventDefault();
          nameValidation.classList.remove('show');
          emailValidation.classList.remove('show');
          var data = this;
          const fData = new FormData(data);
          const nameData = fData.get('name');
          const nameTest = /^[a-zA-Z]+$/.test(nameData);
          const usernameData = fData.get('username');

          if (usernameData) {
            return;
          }
          if (nameData === "" || !isNaN(nameData) || !nameTest) {
            nameValidation.classList.add('show');
            return;
          }
          fetch(data.getAttribute('action'), {
          method: data.getAttribute('method'),
          body: fData
          }).then(res=>res.text())
          .then(function (data) {
              const response = fetch('/thanks').then(res=>res.text())
              .then(function (data) {
                formWrap.innerHTML = data;
              });
          });
        });
      const buildDisplay = (list) => {
        if (list && list.length) {
          list.forEach((entry) => {
            let isCache ='<span class="red">No</span>';
            const request = entry.responseStart - entry.requestStart;
            if (request > 0) {
              if (entry.deliveryType === 'cache') {
                isCache = '<span class="green">Yes</span>';
              }
              displayDataString += `<div class="databox">
                <div class="green"><span class="default-text">Name:</span> ${entry.name.split('/').pop()}</div>
                <div class="orange"><span class="default-text">Size:</span> ${(entry.decodedBodySize / 1000).toFixed(2)} KB</div>
                <div class="blue"><span class="default-text">Timing:</span> ${request.toFixed(2)}ms</div>
                <div><span class="default-text">Cache:</span> ${isCache}</div>
                </div>`;
          }
          });
          perfDataContainer.innerHTML = displayDataString;
        }
      }
      const observer = new PerformanceObserver((list) => {
        buildDisplay(list.getEntries());
      });
      observer.observe({ type: "resource", buffered: true });
      setTimeout(() => {
        observer.disconnect();
      },1000)

    // evt bindings
    resourceBtn.addEventListener('click', () => {
      perfWrap.classList.add('show');
      });
    closeIcon.addEventListener('click',() => {
      perfWrap.classList.remove('show');
    });

  });
}())
</script>
  </body>
</html>