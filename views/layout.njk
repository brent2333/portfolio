<!DOCTYPE html>
<html lang="en">
  <head>
    {% block head %}
      <link rel="stylesheet" href="/assets/main.css"/>
      <title>
        {% block title %}{% endblock %}Brent Lawson Portfolio</title>
    {% endblock %}
    <meta name="viewport" content="width=device-width, initial-scale, maximum-scale=1"
  </head>
  <body>
  <header>
    <div class="round"><a class="logo" href="/"><img src="/assets/img/logo.jpg"  alt="logo BL"/></a></div>
    <div>
        <ul>
        {% for navItem in navList %}
            <li><a href={{ navItem.url }}>{{ navItem.text }}</a></li>
        {% endfor %}
        </ul>
    </div>
    <div id="resource-btn-wrap"><button id="resource-timing-btn">Show Resource Timing Data</button></div>
</header>
      <main>
      {% block content %}{% endblock %}
      <div id="signup">
        <h3>Get in Touch</h3>
      <button id="sign-up-btn">Send Message</button>
      <div class="form-wrap">
        <form id="userForm" method="post" action="/users/sendmessage">
        <div class="flex">
            <label for="name" class="form-label">Name:</label>
            <input type="text" id="name" name="name" required class="form-control">
        </div>
    
        <div class="flex">
            <label for="email" class="form-label">Email:</label>
            <input type="email" id="email" name="email" required class="form-control">
        </div>
    
        <div class="flex">
            <label for="message" class="form-label">Message:</label>
            <textarea id="message" name="message" required class="form-control"></textarea>
        </div>
    
        <button type="submit" class="btn btn-dark">Send Message</button>
    </form>
    </div>
    </div>
    <div id="resource-data-wrap">
      <div>
      <div class="close-icon"></div>
      <div id="resource-data"></div>
    </div>
    </div>
    </main>
    <footer>
      <p>&copy; Copyright 2024</p>
    </footer>
  <script>
(async function() {

      const buildPerfString = new Promise((resolve, reject) => {
        let displayDataString = '';
        const observer = new PerformanceObserver((list) => {
           list.getEntries().forEach((entry) => {
          let isCache ='No';
          const request = entry.responseStart - entry.requestStart;
          if (request > 0) {
            console.log(`${entry.name}: Request time: ${request}ms`);
            if (entry.transferSize === 0 && entry.decodedBodySize > 0) {
              isCache = 'Yes';
            }
            displayDataString += `<div class="databox">
              <div class="green"><span class="default-text">Name:</span> ${entry.name.split('/').pop()}</div>
              <div class="orange"><span class="default-text">Size:</span> ${(entry.transferSize / 8).toFixed(2)} bytes</div>
              <div class="blue"><span class="default-text">Timing:</span> ${request.toFixed(2)}</div>
              <div class="red"><span class="default-text">Cache:</span> ${isCache}</div>
              </div>`;
          }
        });
        resolve(displayDataString);
        });
        observer.observe({ type: "resource", buffered: true });
      });

      document.addEventListener("DOMContentLoaded", (event) => {
        const perfDataContainer = document.getElementById('resource-data');
        const perfWrap = document.getElementById('resource-data-wrap');
        const resourceBtn = document.getElementById('resource-timing-btn');
        const closeIcon = document.getElementsByClassName('close-icon')[0];

        //form
        const formBtn = document.getElementById('sign-up-btn');
        const formWrap = document.querySelectorAll('.form-wrap')[0];
        formBtn.addEventListener('click', () => {
          formWrap.classList.add('open-form');
          formBtn.classList.add('hidden');
        });
        const form = document.getElementById('userForm');
        form.addEventListener('submit', function (event) {
        event.preventDefault();
        var data = this;
        fetch(data.getAttribute('action'), {
        method: data.getAttribute('method'),
        body: new FormData(data)
        }).then(res=>res.text())
        .then(function (data) {
            const response = fetch('/thanks').then(res=>res.text())
            .then(function (data) {
              formWrap.innerHTML = data;
            });
        });
    });

    // perf
    Promise.all([buildPerfString]).then((values) => {
      perfDataContainer.innerHTML = values;
    });

    // evt bindings
    resourceBtn.addEventListener('click', () => {
      perfWrap.classList.add('show');
      });
    closeIcon.addEventListener('click',() => {
      perfWrap.classList.remove('show');
    });

  });
}())
</script>
  </body>
</html>