<!DOCTYPE html>
<html lang="en" class={{ theme }}>
  <head>
    <style>body{background-color:#47506b}.light body{background-color:#ddd}footer,header{background-color:#262d40}.light footer,.light header{background-color:rgba(0,0,0,.1)}.sans-serif{font-family:'Franklin Gothic Medium',Arial,sans-serif}.skip-to-content-link{background:#e77e23;height:30px;left:50%;padding:8px;position:absolute;transform:translateX(-100%);opacity:0;transition:transform .3s}.skip-to-content-link:focus{transform:translateY(0);opacity:1}main{color:#ddd}.light main{color:#333}main{max-width:1024px;width:90vw;margin:0 auto;padding:32px 16px 16px 16px;display:grid;grid-template-columns:60% calc(40% - 24px);gap:24px;position:relative}footer,header{padding:16px;width:90vw;margin:0 auto;border-radius:18px;max-width:1024px}header{display:flex;flex-wrap:wrap;gap:8px;align-content:center;justify-content:center}header a:not(.logo){color:#ddd;font-weight:300;background-color:rgba(30,32,38,.7);padding:6px 8px;border-radius:4px;text-decoration:none;font-size:13px}header a:not(.logo):hover{background-color:rgba(0,0,0,.4);cursor:pointer}nav input[type=checkbox],nav label{display:none}nav ul li{white-space:nowrap}.ham{display:flex;flex-direction:column;width:50px;height:30px;gap:3px}.ham span{display:block;background-color:#000;border-radius:6px;padding:4px}nav{flex-grow:3}#theme-wrap{color:#ddd;justify-content:center;display:flex;flex-direction:column;text-align:center;flex-wrap:wrap;align-content:center;position:relative;height:30px;align-self:center}#theme-wrap span{font-size:13px}#radio-theme-wrap{padding-top:11px;display:flex;gap:7px;justify-content:center;color:#ddd;font-size:12px;width:100px;align-self:center}#radio-theme-wrap label{font-weight:200;height:32px;width:40px;display:flex;flex-direction:column;flex-wrap:wrap}#radio-theme-wrap label[for=light]{margin-top:1px}#radio-theme-wrap input{opacity:0;margin:0}#radio-theme-wrap label:hover{cursor:pointer}.dark #radio-theme-wrap label span{color:#fff;font-size:18px}.light #radio-theme-wrap label span{color:#333;font-size:18px}.visible-picker-wrap{position:absolute;left:calc(50% - 22px);display:flex}.track{height:16px;width:44px;box-shadow:inset 0 2px 4px 0 #000;border-radius:8px;position:relative}.dark .track{border:1px solid #ddd}.light .track{border:1px solid #333}.track-dot{border-radius:8px;position:absolute;top:1px;left:30px;height:16px;width:16px;opacity:.7}.dark .track-dot{background-color:#ddd;left:30px}.light .track-dot{background-color:#333;left:1px}.round{mask-image:url(/assets/img/photo.svg);mask-repeat:no-repeat;mask-position:top;mask-size:100%;border:4px solid rgba(0,0,0,.6);width:32px;height:32px;margin-right:12px;align-self:center;background-color:#000}button:hover{cursor:pointer}section{display:flex;gap:24px;flex-direction:column;position:relative}ul{list-style-type:none;display:flex;gap:8px}button{max-width:140px;padding:14px;border-radius:10px;font-size:16px;border:none;box-shadow:rgba(0,0,0,.3) 2px 2px 10px 4px}button{background-color:#304a3b;color:#eee}.light button{background-color:#5aa278;color:#fff}button:hover{background-color:#182a20}@media(max-width:769px){.skip-to-content-link{display:none}}</style>
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-9WFNS9D6T8"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'G-9WFNS9D6T8');
    </script>
    <script>
      (async function () {
        function setDocumentClasses(themeClass) {
          const html = document.getElementsByTagName("html");
          html[0].classList = [themeClass];
        }
        function setThemeFromLocalStorageOrMediaPreference() {
          const theme = localStorage.getItem("themeSetting") || "auto";

          switch (theme) {
            case "dark":
              setDocumentClasses("dark");
              break;
            case "light":
              setDocumentClasses("light");
              break;
            case "auto":
              if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
                setDocumentClasses("dark");
              } else if (window.matchMedia("(prefers-color-scheme: light)").matches) {
                setDocumentClasses("light");
              }
              break;
          }
        }

        document.addEventListener("DOMContentLoaded", (event) => {
          const theme = localStorage.getItem("themeSetting");
          const html = document.getElementsByTagName("html");
          if (theme) {
            html[0].classList = [theme];
          }
          setTimeout(() => {
            setThemeFromLocalStorageOrMediaPreference();
          }, 600);

          document.querySelectorAll("#theme-wrap input").forEach((toggle) => {
            toggle.addEventListener(
              "change",
              (e) => {
                if (e.target.checked) {
                  if (e.target.value == "auto") {
                    localStorage.removeItem("themeSetting");
                  } else {
                    localStorage.setItem("themeSetting", e.target.value);
                  }
                }

                setThemeFromLocalStorageOrMediaPreference();
              },
              false
            );
          });

          // handle other tabs changing local storage
          window.addEventListener("storage", (e) => {
            if (e.key == "themeSetting") {
              setThemeFromLocalStorageOrMediaPreference();
            }
          });
        });
      })();

    </script>
    {% block head %}
    {% if isDev %}
    <link rel="stylesheet" href="/assets/main.css"/>
    {% elif not isDev %}
    <link rel="stylesheet" href="/assets/main.min.css"/>
    {% endif %}
      {% if pageUrl.includes('weather') %}
      <link rel="stylesheet" href="/assets/weather.css"/>
      {% endif %}
      {% if pageUrl.includes('guitars') %}
      <link rel="stylesheet" href="/assets/guitars.css"/>
      {% endif %}
      <title>
        {% block title %}{% endblock %}{% if metaTitle %}{{ metaTitle }}{% endif %} | Brent Lawson Portfolio</title>
    {% endblock %}
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=5"/>
  </head>
  <body>
  <header class="sans-serif">
    <div class="round"><a class="logo" href="/"><img src="/assets/img/logo.jpg"  alt="logo BL"/></a></div>
        <nav>
        <!-- The hamburger menu -->
        <label for='menu' tabindex="0">
             <div class="ham">
              <span></span>
              <span></span>
              <span></span>
             </div>
        </label>
         <input id='menu' type='checkbox' />
          <ul>
            {% for navItem in navList %}
              <li><a href={{ navItem.url }} class="nav-link">{{ navItem.text }}</a></li>
            {% endfor %}
        <noscript>
          {% for navItem in navList %}
            <li><a href={{ navItem.url }}>{{ navItem.text }}</a></li>
        {% endfor %}
      </noscript>
        </ul>
        <a class="skip-to-content-link" href="#main">
          Skip to content
        </a>
      </nav>
      <div id="theme-wrap">
        <div id="radio-theme-wrap">
        <label for="light"><span>&#9788;</span> <input id="light" value="light" name="theme-toggle" type="radio" /></label>
        <label for="auto"><input id="auto" value="auto" name="theme-toggle" type="radio" /></label>
          <label for="dark"><input id="dark" value="dark" name="theme-toggle" type="radio" /><span>&#9789;</span> </label>
          
      </div>
      <div class="visible-picker-wrap">
        <div class="track"></div>
        <div class="track-dot"></div>
    </div>
    </div>
    <div id="resource-btn-wrap"><button id="resource-timing-btn">Show Vitals & Resources </button></div>
</header>
      <main id="main">
      {% block content %}{% endblock %}
      <div id="sendmessage">
        <h3>Get in Touch</h3>
      <button id="sign-up-btn">Send Message</button>
      <div class="form-wrap">
        <form id="userForm"  class="sans-serif" method="post" action="/users/sendmessage">
        <div class="flex">
            <label for="name" class="form-label" >Name:</label>
            <input type="text" id="name" name="name" required required maxlength="20" class="form-control">
            <span id="namebad">Name is required</span>
        </div>
    
        <div class="flex">
            <label for="email" class="form-label">Email:</label>
            <input type="email" id="email" name="email" required class="form-control">
            <span id="emailbad">Name is required</span>
        </div>
    
        <div class="flex">
            <label for="message" class="form-label">Message:</label>
            <textarea id="message" name="message" required class="form-control"></textarea>
        </div>
        <label class="hoy" for="username"></label>
        <input class="hoy" autocomplete="off" type="text" id="username" name="username" placeholder="Your name here">
    
        <button type="submit" class="btn btn-dark">Send Message</button>
    </form>
    </div>
    </div>
    <div id="resource-data-wrap">
      <div>
      <div class="close-icon"></div>
      <div id="resource-data"></div>
    </div>
    </div>
    </main>
    <footer class="sans-serif">
      <p>&copy; Copyright 2024</p>
      <button id="login-btn">Login</button>
    </footer>
<script src="/scripts/login.js">
</script>
<div id="login-modal"><div>
  <form id="ulf" class="sans-serif">

  <div class="flex">
      <label for="user" class="form-label">Username:</label>
      <input type="text" id="user" name="user" required class="form-control">
  </div>

  <div class="flex">
      <label for="password" class="form-label">Password:</label>
      <input type="password" id="password" name="password" required class="form-control">
  </div>

  <button type="submit" class="btn btn-dark">Login</button>
  <div id="login-result" class="red"></div>
</form>
</div>
</div>
<script src="/scripts/web-vitals.iife.js"></script>
<script src="/scripts/perf.js"></script>
<script>
  (async function() {
    const passTheme = (event) => {
      event.preventDefault();
      const ref = event.target.getAttribute('href');
      const theme = localStorage.getItem("themeSetting");
      const url =  theme ? `${ref}?theme=${theme}` : ref;
      window.location.assign(url);
    }
  
        document.addEventListener("DOMContentLoaded", (event) => {
          const navLinks = document.querySelectorAll('.nav-link');
          for (const link of navLinks) {
            link.addEventListener('click', passTheme);
          }
    });
  }())
  </script>
  <script src="/scripts/message.js"></script>
  </body>
</html>